(function($){$.nub={identity:function(a){return a},noop:function(){},constant:function(c){return function(){return c}},criteria:{equals:function(id,value,nonEmptyValue){if(value===undefined){return $.nub.constant(true)}if(!value&&nonEmptyValue){return $.nub.constant(true)}return function(obj){return obj!==undefined&&obj[id]==value}},lte:function(id,value){if(value===undefined){return $.nub.constant(true)}return function(obj){return obj!==undefined&&obj[id]<=value}},gte:function(id,value){if(value===undefined){return $.nub.constant(true)}return function(obj){return obj!==undefined&&obj[id]>=value}}}};function isModel(obj){return obj!==undefined&&obj["nub:isModel"]&&$.isFunction(obj.resolve)}function PrototypeModel(){this["nub:isModel"]=true}$.nub.PrototypeModel=PrototypeModel;StandardModel.prototype=new PrototypeModel();function StandardModel(data){$.extend(this,data)}StandardModel.prototype.resolve=function(op,pathIt,value,obj){obj=obj||this;while(obj!==undefined&&pathIt.next()){var prop=pathIt.head();if(obj[prop]===undefined){if("set"==op){obj[prop]={}}}obj=obj[prop];if(isModel(obj)){return obj.resolve(op,pathIt,value)}}if(obj===undefined){return undefined}return this[op](obj,pathIt.last(),value)};StandardModel.prototype.get=function(obj,prop){return obj[prop]};StandardModel.prototype.set=function(obj,prop,value){return obj[prop]=value};StandardModel.prototype.del=function(obj,prop,value){value=obj[prop];delete obj[prop];return value};$.nub.StandardModel=StandardModel;ViewModel.prototype=new PrototypeModel();function ViewModel(){this["nub:views"]=[]}ViewModel.gatherViews=function(node,list,deep){if(node){for(var i=0,views=node["nub:views"];views&&i<views.length;i++){if(!views[i].active){list.push(views[i])}}if(deep){for(var id in node){if(id!="nub:views"){list=this.gatherViews(node[id],list,true)}}}}return list};ViewModel.prototype.node=function(node,prop){if(node[prop]===undefined){node[prop]={"nub:views":[]}}return node[prop]};ViewModel.prototype.resolve=function(op,pathIt,value){var node=this,context=[node];while(pathIt.next()){node=this.node(node,pathIt.head());context.push(node)}return this[op](this.node(node,pathIt.last()),context,value)};ViewModel.prototype.get=function(node,context,value){return{node:node,context:context}};ViewModel.prototype.set=function(node,context,value){var views=node["nub:views"];views.push(value);return views};ViewModel.prototype.del=function(node,context,value){var views=node["nub:views"];for(var i=0;i<views.length;i++){if(views[i]===value){views.splice(i,1);break}}};$.nub.model=new StandardModel({"nub:viewroot":new ViewModel(),"nub:forms":{}});var forms=$.nub.model["nub:forms"];HTMLFormModel.prototype=new PrototypeModel();HTMLFormModel.prototype.counter=0;function HTMLFormModel(form){this.form=form;this.name=form.getAttribute("name")||"form"+(this.counter++);forms[this.name]=this;var context=$.nub.path(this.name,"nub:forms");for(var i=0;i<form.elements.length;i++){$(form.elements[i]).bind("change",function(){var path=$.nub.path(this.name,context);$.nub.notify("set",path)})}$.nub.notify("set",context)}HTMLFormModel.prototype.resolve=function(op,pathIt,value){pathIt.next();return this[op](pathIt.rest(),value)};HTMLFormModel.prototype.get=function(name,value){return $(this.form.elements[name]).val()};HTMLFormModel.prototype.set=function(name,value){return $(this.form.elements[name]).val(value)};HTMLFormModel.prototype.del=function(name,value){this.set(name,"")};HTMLFormModel.prototype.serialize=function(){return $(this.form).serialize()};HTMLFormModel.prototype.values=function(){var elems=this.form.elements,values={},name;for(var i=0;i<elems.length;i++){name=elems[i].name;values[name]=this.get(name)}return values};HTMLFormModel.prototype.setData=function(data,callbacks){var cx="nub:forms/"+this.name,elems=this.form.elements;for(var i=0;i<elems.length;i++){var name=elems[i].name;$.nub.set(name,data[name],cx)}if($.isFunction(callbacks.success)){callbacks.success.apply(this,arguments)}};HTMLFormModel.prototype.load=function(opts){opts=opts||{};var form=this;var url=opts.url||this.form.action;$.ajax({type:"GET",url:url,success:function(data){form.setData(data,opts)},error:opts.error,complete:opts.complete})};HTMLFormModel.prototype.submit=function(opts){opts=opts||{};var form=this;var url=opts.url||this.form.action;$.ajax({type:this.form.method,url:url,data:this.serialize(),success:function(data){form.setData(data,opts)},error:opts.error,complete:opts.complete})};RemoteModel.prototype=new StandardModel();function RemoteModel(opts,ref){this.ref=$.nub.path(ref);this.meta={status:"preload"};this.data=undefined;$.extend(this,{serialize:function(){return JSON.stringify(this.data)},onrequest:$.nub.identity,onload:$.nub.identity},opts)}RemoteModel.prototype.loaded=function(){var status=this.meta.status;return status!==undefined&&!status.match(/^(preload|loading|submitting)/)};RemoteModel.prototype.resolve=function(op,pathIt,value){return StandardModel.prototype.resolve.apply(this,[op,pathIt,value])};RemoteModel.prototype.whenAvailable=function(callback,repeat){var view=function(){var lp=$.nub.get(this.ref);if(lp.loaded()){try{callback(lp)}finally{if(!repeat){$.nub.removeView("meta/status",view,this.ref)}}}};$.nub.view("meta/status",view,this.ref)};RemoteModel.prototype.update=function(uri,status,method,data,error){var remote=this.onload($.extend({},this,{meta:{error:error,uri:uri,timestamp:new Date(),"ajax-status":status,status:"loaded",initData:JSON.stringify(data)},data:data}),method);$.nub.set(this.ref,remote)};RemoteModel.prototype.load=function(options){var remote=this;var success=options.success||$.nub.model.options.remote.success;var error=options.error||$.nub.model.options.remote.error;var args=$.extend({type:"GET"},options);args.success=function(data,status){remote.update(options.url,status,"GET",data);success.apply(remote,[data,status])};args.error=function(xhr,status,err){remote.update(options.url,status,"GET",undefined,err);error.apply(this,[xhr,status,err])};args=remote.onrequest(args);$.nub.set("meta/status",args.type=="GET"?"loading":"submitting",this.ref);$.nub.set("meta/dataType",options.dataType,this.ref);return $.ajax(args)};RemoteModel.prototype.parseLoadArguments=function(){var options={};for(var i=0;i<arguments.length;i++){if(typeof(arguments[i])=="string"){options=$.extend(options,{url:arguments[i]})}else{if($.isFunction(arguments[i])){options=$.extend(options,{success:arguments[i]})}else{if($.isPlainObject(arguments[i])){options=$.extend(options,arguments[i]);options.url=options.uri}}}}return options};RemoteModel.prototype.httpGet=function(){var options=$.extend({type:"GET",dataType:"json"},this.parseLoadArguments.apply(this,arguments));return this.load(options)};RemoteModel.prototype.httpPut=function(){var options=$.extend({type:"PUT",uri:this.meta.uri,dataType:"json",data:this.serialize()},this.parseLoadArguments.apply(this,arguments));return this.load(options)};RemoteModel.prototype.httpPost=function(){var options=$.extend({type:"POST",dataType:"json",data:this.serialize()},this.parseLoadArguments.apply(this,arguments));return this.load(options)};RemoteModel.prototype.reload=function(){if(this.meta.status=="loaded"){var options=$.extend({uri:this.meta.uri,dataType:this.meta.dataType},this.parseLoadArguments.apply(this,arguments));return this.load(options)}};RemoteModel.prototype.reset=function(){$.nub.set("data",JSON.parse(this.meta.initData),ref)};$.nub.RemoteModel=RemoteModel;$.nub.model.options={refAttr:"data",viewSelector:".nub-view",contextSelector:".nub-context",formSelector:"form.nub-form",selectSelector:".nub-select",attrRefPattern:/^#?nub:(.*)$/,isInput:function(elem){return !!elem.type&&elem.type!="button"},getRef:function(elem){return $(elem).attr($.nub.model.options.refAttr)},getInputRef:function(elem){return elem.name},readFormatOptions:function(elem,fopts){return $.extend({},$.nub.model.options.formatOptions,fopts)},formatters:{},formatOptions:{},readInputValue:function(input){return $(input).val()},readCheckboxValue:function(cb){return $(cb).is(":checked")},inputView:function(input,value){$(input).val(value)},checkboxView:function(cb,value){$(cb).attr("checked",value)},elemView:function(elem,value){$(elem).html(value)},attrView:function(attr,value){attr.value=value},textView:function(text,value){$(text).text(value)},remote:{success:$.nub.noop,error:$.nub.noop}};if($.metadata!==undefined){$.nub.model.options.readFormatOptions=function(elem,fopts){return $.extend($.nub.model.options.formatOptions,fopts,$.metadata.get(elem))}}function selectListView(elem,ref,context){var offset=elem.options.length;return function(){var list=$.nub.get(ref,context);var i,j,len=list!==undefined?list.length||0:0;for(i=0,j=offset;i<len;i++,j++){if(list[i] instanceof Array){elem.options[j]=new Option(list[i][1],list[i][0])}else{elem.options[j]=new Option(list[i])}}for(j=j;j<elem.options.length;j++){elem.options[j]=undefined}}}function getNodeRef(node){return node.getAttribute($.nub.model.options.refAttr)}function PathIterator(path){var idx=-1;this.head=function(){return path[idx]};this.rest=function(){return path.slice(idx).join("/")};this.next=function(){return ++idx<path.length-1};this.last=function(){return path[path.length-1]};this.path=function(){return path}}function promoteToPath(ref,absolute){ref.toString=function(i){return(this.isAbsolute?"/":"")+(isNaN(i)?this:this.slice(0,i+1)).join("/")};ref.copy=function(){return promoteToPath(this.slice(0))};ref.inContext=function(context){var path=$.nub.path(context).slice(0);for(var i=0;i<this.length;i++){path.push(this[i])}return $.nub.path(path)};ref.iterator=function(){return new PathIterator(this)};ref.isAbsolute=absolute;ref.isModelPath=true;return ref}$.nub.path=function(ref,context){ref=ref||[];var path;if(ref.isModelPath){path=ref}else{if($.isArray(ref)){path=promoteToPath(ref,true)}else{if(typeof(ref)=="string"){var absolute=ref.charAt(0)=="/";var refs=ref.split("/");if(refs[0]==""){refs.shift()}while(refs[refs.length-1]==""){refs.length--}path=promoteToPath(refs,absolute)}}}if(!path.isAbsolute&&context!==undefined){path=path.inContext(context)}return path};$.nub.get=function(ref,context){var pathIt=$.nub.path(ref,context).iterator();return $.nub.model.resolve("get",pathIt)};$.nub.set=function(ref,value,context){var path=$.nub.path(ref,context);var result=$.nub.model.resolve("set",path.iterator(),value);$.nub.notify("set",path)};$.nub.del=function(ref,value,context){var path=$.nub.path(ref,context);var result=$.nub.model.resolve("del",path.iterator(),value);$.nub.notify("del",path)};$.nub.notify=function(op,path){var viewNodes=$.nub.get(path.inContext("nub:viewroot"));var views=[],node,context;if(viewNodes.node&&viewNodes.context){node=viewNodes.node;context=viewNodes.context}else{node={};for(var id in viewNodes){if(viewNodes.hasOwnProperty(id)){node[id]=viewNodes[id]}}context=[]}for(var i=0;i<context.length;views=ViewModel.gatherViews(context[i++],views)){}views=ViewModel.gatherViews(node,views,true);if(views){$.each(views,function(i,view){try{view.active=true;view(op,path)}catch(e){if(console!==undefined){console.error("Notifying view: %o",e)}}finally{view.active=false}})}};function formattingView(path,node,viewFn){var opts=$.nub.model.options;var fopts=opts.readFormatOptions(node);return function(){var value=$.nub.get(path);var formatter=opts.formatters[fopts.formatter];if(formatter){value=formatter.format(value,fopts)}else{if(value===undefined){value=""}}viewFn(node,value)}}$.nub.view=function(ref,obj,context,noinit){var path=$.nub.path(ref,context);var fn;if($.isFunction(obj)){fn=obj}else{if(obj.type){var view=obj.type=="checkbox"?$.nub.model.options.checkboxView:$.nub.model.options.inputView;fn=formattingView(path,obj,view)}else{switch(obj.nodeType){case 1:fn=formattingView(path,obj,$.nub.model.options.elemView);break;case 2:fn=formattingView(path,obj,$.nub.model.options.attrView);break;case 3:fn=formattingView(path,obj,$.nub.model.options.textView);break;default:throw new Error("View must be a HTML element, attribute or text node, or a function")}}}var viewPath=path.inContext("nub:viewroot");$.nub.set(viewPath,fn);if(!noinit){fn("set",path)}return fn};$.nub.removeView=function(ref,obj,context){$.nub.del($.nub.path(ref,context).inContext("nub:viewroot"),obj)};$.nub.input=function(node,context,opts){var fopts=$.nub.model.options.readFormatOptions(node);var readValue=node.type=="checkbox"?$.nub.model.options.readCheckboxValue:$.nub.model.options.readInputValue;var onchange=function(event){var value=readValue(node);var formatter=$.nub.model.options.formatters[fopts.formatter];if(formatter){value=formatter.parse(value,fopts)}$.nub.set(node.name,value,context)};return $(node).bind("change",[context,opts],onchange)};$.nub.remote=function(ref,opts){var remote=new RemoteModel(opts,ref);$.nub.set(ref,remote);return remote};$.nub.filter=function(filterRef,dataRef,filterFn){$.nub.set(filterRef,{"filter:args":{}});function filterView(op,path){var value=$.nub.get(dataRef);var args=$.nub.get("filter:args",filterRef);$.nub.set(filterRef,$.extend(filterFn(value,args),{"filter:args":args}))}$.nub.view(dataRef,filterView);$.nub.view("filter:args",filterView,filterRef,true)};$.nub.initializers={viewSelector:function(node,opts){var context=$(node).parents(opts.contextSelector).attr("data");var input=opts.isInput(node);var ref=input?opts.getInputRef(node):opts.getRef(node);if(ref){$.nub.view(ref,node,context);if(input){$.nub.input(node,context)}}var attrs=node.attributes;for(var i=0;i<attrs.length;i++){var r=opts.attrRefPattern.exec(attrs[i].value);if(r){$.nub.view(r[1],attrs[i],context)}}},formSelector:function(node,opts){new HTMLFormModel(node)},selectSelector:function(node,opts){if(node.type=="select-one"||node.type=="select-many"){var context=$(node).parent(opts.contextSelector).attr("data");var data=$(node).attr("data");if(data){$.nub.view(data,selectListView(node,data,context),context)}}}};$.nub.init=function(cx,opts){var opts=$.extend({},$.nub.model.options,opts);var inits=$.nub.initializers;for(var id in inits){$(opts[id],cx).each(function(){inits[id](this,opts)})}}})(jQuery);